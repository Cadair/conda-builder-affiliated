package:
  name: gammapy
  version: "0.2"

source:
  fn: gammapy-0.2.tar.gz
  url: https://pypi.python.org/packages/source/g/gammapy/gammapy-0.2.tar.gz
  md5: 2a73f8b892764af7d1067dc6a3fac913
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - gammapy = gammapy:main
    #
    # Would create an entry point called gammapy that calls gammapy.main()

    - gammapy-background-cube = gammapy.scripts.background_cube:main
    - gammapy-bin-cube = gammapy.scripts.bin_cube:main
    - gammapy-bin-image = gammapy.scripts.bin_image:main
    - gammapy-coordinate-images = gammapy.scripts.coordinate_images:main
    - gammapy-cwt = gammapy.scripts.cwt:main
    - gammapy-derived-images = gammapy.scripts.derived_images:main
    - gammapy-detect = gammapy.scripts.detect:main
    - gammapy-find-obs = gammapy.scripts.find_obs:main
    - gammapy-image-decompose-a-trous = gammapy.scripts.image_decompose_a_trous:main
    - gammapy-info = gammapy.scripts.info:main
    - gammapy-irf-info = gammapy.scripts.irf_info:main
    - gammapy-irf-root-to-fits = gammapy.scripts.irf_root_to_fits:main
    - gammapy-iterative-source-detect = gammapy.scripts.iterative_source_detect:main
    - gammapy-look-up-image = gammapy.scripts.look_up_image:main
    - gammapy-model-image = gammapy.scripts.model_image:main
    - gammapy-pfmap = gammapy.scripts.pfmap:main
    - gammapy-pfsim = gammapy.scripts.pfsim:main
    - gammapy-pfspec = gammapy.scripts.pfspec:main
    - gammapy-reflected-regions = gammapy.scripts.reflected_regions:main
    - gammapy-residual-images = gammapy.scripts.residual_images:main
    - gammapy-root-to-fits = gammapy.scripts.root_to_fits:main
    - gammapy-sherpa-like = gammapy.scripts.sherpa_like:main
    - gammapy-sherpa-model-image = gammapy.scripts.sherpa_model_image:main
    - gammapy-significance-image = gammapy.scripts.significance_image:main
    - gammapy-simulate-source-catalog = gammapy.scripts.simulate_source_catalog:main
    - gammapy-test = gammapy.scripts.check:main
    - gammapy-ts-image = gammapy.scripts.ts_image:main
    - gammapy-xspec = gammapy.scripts.xpsec:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - numpy >=1.6
    - astropy >=1.0

  run:
    - python
    - numpy >=1.6
    - astropy >=1.0

test:
  # Python imports
  imports:
    - gammapy
    - gammapy.astro
    - gammapy.astro.population
    - gammapy.astro.population.tests
    - gammapy.astro.source
    - gammapy.astro.source.tests
    - gammapy.background
    - gammapy.background.tests
    - gammapy.catalog
    - gammapy.catalog.tests
    - gammapy.data
    - gammapy.data.tests
    - gammapy.datasets
    - gammapy.datasets.tests
    - gammapy.detect
    - gammapy.detect.tests
    - gammapy.extern
    - gammapy.image
    - gammapy.image.tests
    - gammapy.irf
    - gammapy.irf.tests
    - gammapy.morphology
    - gammapy.morphology.tests
    - gammapy.obs
    - gammapy.obs.tests
    - gammapy.scripts
    - gammapy.scripts.tests
    - gammapy.shower
    - gammapy.shower.tests
    - gammapy.spectrum
    - gammapy.spectrum.tests
    - gammapy.stats
    - gammapy.stats.tests
    - gammapy.tests
    - gammapy.utils
    - gammapy.utils.coordinates
    - gammapy.utils.coordinates.tests
    - gammapy.utils.distributions
    - gammapy.utils.distributions.tests
    - gammapy.utils.root
    - gammapy.utils.root.tests
    - gammapy.utils.tests

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - gammapy-background-cube --help
    - gammapy-bin-cube --help
    - gammapy-bin-image --help
    - gammapy-coordinate-images --help
    - gammapy-cwt --help
    - gammapy-derived-images --help
    - gammapy-detect --help
    - gammapy-find-obs --help
    - gammapy-image-decompose-a-trous --help
    - gammapy-info --help
    - gammapy-irf-info --help
    - gammapy-irf-root-to-fits --help
    - gammapy-iterative-source-detect --help
    - gammapy-look-up-image --help
    - gammapy-model-image --help
    - gammapy-pfmap --help
    - gammapy-pfsim --help
    - gammapy-pfspec --help
    - gammapy-reflected-regions --help
    - gammapy-residual-images --help
    - gammapy-root-to-fits --help
    - gammapy-sherpa-like --help
    - gammapy-sherpa-model-image --help
    - gammapy-significance-image --help
    - gammapy-simulate-source-catalog --help
    - gammapy-test --help
    - gammapy-ts-image --help
    #- gammapy-xspec --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/gammapy/gammapy
  license: BSD License
  summary: 'A Python package for gamma-ray astronomy'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
